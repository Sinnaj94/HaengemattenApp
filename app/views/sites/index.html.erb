<style>

</style>
<div id="map" class ="ol-map">
  <p id="notice" class="ol-notice"><%= notice %></p>
</div>
<div style="display: none;">
  <!-- Clickable label for Vienna -->
  <div id="popup" class="ol-popup">
    <a href="#" id="popup-closer" class="ol-popup-closer"></a>
    <div id="popup-content"></div>
  </div>
</div>
<script>


    var container = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    var closer = document.getElementById('popup-closer');
    var overlay = new ol.Overlay({
        element: container,
        autoPan: true,
        autoPanAnimation: {
            duration: 250
        }
    });


    // Adding all hammocks
    var hammocks = [];
    <% @sites.each do |site| %>
        var point = new ol.geom.Point([<%= site.longitude %>, <%= site.latitude %>]);
        point.transform('EPSG:4326', 'EPSG:900913');
      var hammock = new ol.Feature({
            geometry: point,
            name: '<%=site.name %>',
            description: '<%=site.description %>',
            user: {
                first: "<%= site.user.first_name %>",
                last: "<%= site.user.last_name %>"
            },
            review_count: <%= site.reviews.size %>,
            belongs_to_user: <%= site.user == current_user %>,
            <%if site.user == current_user%>
              edit: '<%= button_to "Bearbeiten", edit_site_path(site), :class => "btn btn-primary btn-block", :method => :get %>',
              delete: '<%= button_to "Löschen",  site, method: :delete, :class => "btn btn-warning btn-block" , confirm: 'Are you sure?' %>'
            <% end %>
        });
        hammocks.push(hammock);
    <% end %>

    var iconStyle = new ol.style.Style({
        image: new ol.style.Icon(/** @type {module:ol/style/Icon~Options} */ ({
            anchor: [0.5, 1],
            anchorXUnits: 'fraction',
            anchorYUnits: 'fraction',
            src: "<%= asset_path('hammock.png') %>"
        }))
    });

    hammocks.forEach(hammock => hammock.setStyle(iconStyle));

    var vectorSource = new ol.source.Vector({
        features: hammocks
    });

    var vectorLayer = new ol.layer.Vector({
        source: vectorSource
    });

    var tileLayer = new ol.layer.Tile({
        source: new ol.source.OSM()
    });


    closer.onclick = function() {
        overlay.setPosition(undefined);
        closer.blur();
        return false;
    };

    var map = new ol.Map({
        layers: [
            tileLayer,
            vectorLayer
        ],
        overlays: [overlay],
        target: 'map',
        view: new ol.View({
            center: [0, 0],
            zoom: 2
        })
    });



    map.on('singleclick', function(evt) {
        var coordinate = evt.coordinate;
        var feature = map.forEachFeatureAtPixel(evt.pixel,
            function(feature) {
                return feature;
          });
        if(feature) {
            coordinate = feature.get("geometry").flatCoordinates;
            $(container).addClass("marker");
            content.innerHTML = featureToHTML(feature);
        } else {
            $(container).removeClass("marker");
            content.innerHTML = emptySlot();
        }
        overlay.setPosition(coordinate);
    });

    function featureToHTML(feature) {
        var comment = "Kommentare";
        if(feature.get("review_count") === 1) {
          comment = "Kommentar";
        }
        var isMine = feature.get("belongs_to_user");
        var postfix = "";
        if(isMine) {
            postfix = feature.get("edit") + feature.get("delete");
        }
        return "<h2>" + feature.get("name") + "</h2> " +
            "<span class='discoverer'>" + feature.get("user").first + " " + feature.get("user").last + "</span>" +
        "<div class='description'>" +
        feature.get("description") +
        "</div>" +
        "<a href='#'>" +
        feature.get("review_count") + " " + comment +
        "</a>" + postfix;
    }

    function emptySlot() {
        var edit = '<%= button_to "Hängematte hinzufügen", new_site_path, :class => "btn btn-success btn-block", :method => :get %>';
        return "<p>Hier ist noch keine Hängematte abgespeichert worden!</p>" + edit ;
    }

</script>